1. Which of these is data type long literal?
<<<<<
a) 0x99fffL
b) ABCDEFG
c) 0x99fffa
d) 99671246
2. Which of these is returned by operators &, ?
<<<<<
a) Integer
b) Boolean
c) Character
d) Float
3. Literals in java must be preceded by which of these?
<<<<<
a) L
b) l
c) D
d) L and I
4. Literal can be of which of these data types?
<<<<<
a) integer
b) float
c) boolean
d) all of the mentioned
5. Which of these can not be used for a variable name in Java?
<<<<<
a) identifier
b) keyword
c) identifier & keyword
d) None of the mentioned
6. What is the output of this program?

    class evaluate {
        public static void main(String args[]) 
        {
            int a[] = {1,2,3,4,5};
	    int d[] = a;
	    int sum = 0;
	    for (int j = 0; j < 3; ++j)
                sum += (a[j] * d[j + 1]) + (a[j + 1] * d[j]);
	    System.out.println(sum);
        } 
    }
<<<<<
a) 38
b) 39
c) 40
d) 41
7. What is the output of this program?

    class array_output {
        public static void main(String args[]) 
        {
       	    int array_variable [] = new int[10];
	    for (int i = 0; i < 10; ++i) {
                array_variable[i] = i/2;
                array_variable[i]++;
                System.out.print(array_variable[i] + " ");
                i++;
            }
 
        } 
    }
<<<<<
a) 0 2 4 6 8
b) 1 2 3 4 5
c) 0 1 2 3 4 5 6 7 8 9
d) 1 2 3 4 5 6 7 8 9 10
8. What is the output of this program?

    class variable_scope {
        public static void main(String args[]) 
        {
            int x;
            x = 5;
            {
	        int y = 6;
	        System.out.print(x + " " + y);
            }
            System.out.println(x + " " + y);
        } 
    }
<<<<<
a) 5 6 5 6
b) 5 6 5
c) Runtime error
d) Compilation error
9. Which of these is incorrect string literal?
<<<<<
a) “Hello World”
b) “Hello\nWorld”
c) “\”Hello World””
d) “Helloworld”
10. What is the output of this program?

    class dynamic_initialization {
        public static void main(String args[]) 
        {
            double a, b;
            a = 3.0;
            b = 4.0;
	    double c = Math.sqrt(a * a + b * b);
	    System.out.println(c);
        } 
    }
<<<<<
a) 5.0
b) 25.0
c) 7.0
d) Compilation Error