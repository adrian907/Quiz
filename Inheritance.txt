1. Which of these keyword must be used to inherit a class?
<<<<<
a) super
b) this
c) extent
d) extends
2. Which of these keywords is used to refer to member of base class from a sub class?
<<<<<
a) upper
b) super
c) this
d) None of the mentioned
3. A class member declared protected becomes member of subclass of which type?
<<<<<
a) public member
b) private member
c) protected member
d) static member
4. Which of these is correct way of inheriting class A by class B?
<<<<<
a) class B + class A {}
b) class B inherits class A {}
c) class B extends A {}
d) class B extends class A {}
5. Which of the following statements are incorrect?
<<<<<
a) public members of class can be accessed by any code in the program.
b) private members of class can only be accessed by other members of the class.
c) private members of class can be inherited by a sub class, and become protected members in sub class.
d) protected members of a class can be inherited by a sub class, and become private members of the sub class.
6. What is the output of this program?

    class A {
        int i;
        void display() {
            System.out.println(i);
        }
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class inheritance_demo {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
<<<<<
a) 0
b) 1
c) 2
d) Compilation Error
7. What is the output of this program?

    class A {
        int i;
    }    
    class B extends A {
        int j;
        void display() {
            super.i = j + 1;
            System.out.println(j + " " + i);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
<<<<<
a) 2 2
b) 3 3
c) 2 3
d) 3 2
8. What is the output of this program?

    class A {
        public int i;
        private int j;
    }    
    class B extends A {
        void display() {
            super.j = super.i + 1;
            System.out.println(super.i + " " + super.j);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
<<<<<
a) 2 2
b) 3 3
c) Runtime Error
d) Compilation Error
9. What is the output of this program?

    class A {
        public int i;
        public int j;
        A() {
            i = 1;
            j = 2;
	}
    }    
    class B extends A {
        int a;
        B() {
            super();
        } 
    }    
    class super_use {
        public static void main(String args[])
        {
            B obj = new B();
            System.out.println(obj.i + " " + obj.j)     
        }
   }
<<<<<
a) 1 2
b) 2 1
c) Runtime Error
d) Compilation Error
10. What is the output of this program?

    class A {
        public int i;
        protected int j;
    }    
    class B extends A {
        int j;
        void display() {
            super.j = 3;
            System.out.println(i + " " + j);
        }
    }    
    class Output {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
<<<<<
a) 1 2
b) 2 1
c) 1 3
d) 3 1